plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '2.4.2'
    id 'org.sonarqube' version '3.3'
    id 'jacoco'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
test.finalizedBy jacocoTestReport

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

sonarqube {
    properties {
        property "sonar.projectKey", "I467404_its-individual-track_AXyEI-W9927Jwc7X5cS7"
        property "sonar.qualitygate.wait", true
    }
}

dependencies {

    implementation 'junit:junit:4.13.1'
    implementation 'org.jetbrains:annotations:20.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'com.auth0:java-jwt:3.11.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.mockito:mockito-core:3.+"

    implementation 'org.modelmapper:modelmapper:2.1.1'

    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
}

tasks.named('sonarqube').configure {
    dependsOn test
}

test {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = "mainApplication.jar"
}